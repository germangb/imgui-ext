(function() {var implementors = {};
implementors["addr2line"] = [{"text":"impl&lt;R&gt; !Sync for Context&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx, R&gt; !Sync for LocationRangeIter&lt;'ctx, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx, R&gt; !Sync for FrameIter&lt;'ctx, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ctx, R&gt; Sync for Frame&lt;'ctx, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for FunctionName&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Location&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["adler"] = [{"text":"impl Sync for Adler32","synthetic":true,"types":[]}];
implementors["backtrace"] = [{"text":"impl Sync for Frame","synthetic":true,"types":[]},{"text":"impl !Sync for Symbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SymbolName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !Sync for BacktraceFmt&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'fmt, 'a, 'b&gt; !Sync for BacktraceFrameFmt&lt;'fmt, 'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Backtrace","synthetic":true,"types":[]},{"text":"impl Sync for BacktraceFrame","synthetic":true,"types":[]},{"text":"impl Sync for BacktraceSymbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BytesOrWideString&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PrintFmt","synthetic":true,"types":[]}];
implementors["failure"] = [{"text":"impl Sync for Backtrace","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Compat&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Sync for Context&lt;D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SyncFailure&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; Sync for Causes&lt;'f&gt;","synthetic":true,"types":[]}];
implementors["gimli"] = [{"text":"impl Sync for Encoding","synthetic":true,"types":[]},{"text":"impl Sync for LineEncoding","synthetic":true,"types":[]},{"text":"impl Sync for Register","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugAbbrevOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugAddrBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugAddrIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugInfoOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugLineOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugLineStrOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for LocationListsOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugLocListsBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugLocListsIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugMacinfoOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugMacroOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for RangeListsOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugRngListsBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugRngListsIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugStrOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugStrOffsetsBase&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugStrOffsetsIndex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugTypesOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for DebugTypeSignature","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DebugFrameOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for EhFrameOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for DwoId","synthetic":true,"types":[]},{"text":"impl Sync for Arm","synthetic":true,"types":[]},{"text":"impl Sync for X86","synthetic":true,"types":[]},{"text":"impl Sync for X86_64","synthetic":true,"types":[]},{"text":"impl Sync for BigEndian","synthetic":true,"types":[]},{"text":"impl Sync for LittleEndian","synthetic":true,"types":[]},{"text":"impl Sync for Format","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for UnitSectionOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SectionId","synthetic":true,"types":[]},{"text":"impl Sync for DwarfFileType","synthetic":true,"types":[]},{"text":"impl Sync for RunTimeEndian","synthetic":true,"types":[]},{"text":"impl Sync for DwUt","synthetic":true,"types":[]},{"text":"impl Sync for DwCfa","synthetic":true,"types":[]},{"text":"impl Sync for DwChildren","synthetic":true,"types":[]},{"text":"impl Sync for DwTag","synthetic":true,"types":[]},{"text":"impl Sync for DwAt","synthetic":true,"types":[]},{"text":"impl Sync for DwForm","synthetic":true,"types":[]},{"text":"impl Sync for DwAte","synthetic":true,"types":[]},{"text":"impl Sync for DwLle","synthetic":true,"types":[]},{"text":"impl Sync for DwDs","synthetic":true,"types":[]},{"text":"impl Sync for DwEnd","synthetic":true,"types":[]},{"text":"impl Sync for DwAccess","synthetic":true,"types":[]},{"text":"impl Sync for DwVis","synthetic":true,"types":[]},{"text":"impl Sync for DwVirtuality","synthetic":true,"types":[]},{"text":"impl Sync for DwLang","synthetic":true,"types":[]},{"text":"impl Sync for DwAddr","synthetic":true,"types":[]},{"text":"impl Sync for DwId","synthetic":true,"types":[]},{"text":"impl Sync for DwCc","synthetic":true,"types":[]},{"text":"impl Sync for DwInl","synthetic":true,"types":[]},{"text":"impl Sync for DwOrd","synthetic":true,"types":[]},{"text":"impl Sync for DwDsc","synthetic":true,"types":[]},{"text":"impl Sync for DwIdx","synthetic":true,"types":[]},{"text":"impl Sync for DwDefaulted","synthetic":true,"types":[]},{"text":"impl Sync for DwLns","synthetic":true,"types":[]},{"text":"impl Sync for DwLne","synthetic":true,"types":[]},{"text":"impl Sync for DwLnct","synthetic":true,"types":[]},{"text":"impl Sync for DwMacro","synthetic":true,"types":[]},{"text":"impl Sync for DwRle","synthetic":true,"types":[]},{"text":"impl Sync for DwOp","synthetic":true,"types":[]},{"text":"impl Sync for DwEhPe","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugAddr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugFrame&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for EhFrameHdr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for ParsedEhFrameHdr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Sync for EhHdrTable&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for EhFrame&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for BaseAddresses","synthetic":true,"types":[]},{"text":"impl Sync for SectionBaseAddresses","synthetic":true,"types":[]},{"text":"impl&lt;'bases, Section, R&gt; Sync for CfiEntriesIter&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Augmentation","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for CommonInformationEntry&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'bases, Section, R&gt; Sync for PartialFrameDescriptionEntry&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Section as UnwindSection&lt;R&gt;&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for FrameDescriptionEntry&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for UninitializedUnwindContext&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for UnwindContext&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Sync for UnwindTable&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'iter, R&gt; Sync for RegisterRuleIter&lt;'iter, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for UnwindTableRow&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R&gt; Sync for CallFrameInstructionIter&lt;'a, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Dwarf&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for Unit&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for RangeIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'input, Endian&gt; Sync for EndianSlice&lt;'input, Endian&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Endian: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ReaderOffsetId","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugAbbrev&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Abbreviations","synthetic":true,"types":[]},{"text":"impl Sync for Abbreviation","synthetic":true,"types":[]},{"text":"impl Sync for AttributeSpecification","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for ArangeEntry&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugAranges&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for ArangeEntryIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugLine&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Program, Offset&gt; Sync for LineRows&lt;R, Program, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Program: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for LineInstructions&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for LineRow","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for LineSequence&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for LineProgramHeader&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for IncompleteLineProgram&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for CompleteLineProgram&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for FileEntry&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for FileEntryFormat","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugLoc&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugLocLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for LocationLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for RawLocListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for LocListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for LocationListEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for Piece&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Expression&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for OperationIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Evaluation&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for PubNamesEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugPubNames&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for PubNamesEntryIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for PubTypesEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugPubTypes&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for PubTypesEntryIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugRanges&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugRngLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for RangeLists&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for RawRngListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for RngListIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Range","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugStr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugStrOffsets&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugLineStr&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for UnitOffset&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugInfo&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugInfoUnitHeadersIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for UnitHeader&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R, Offset&nbsp;=&nbsp;&lt;R as Reader&gt;::Offset&gt; !Sync for DebuggingInformationEntry&lt;'abbrev, 'unit, R, Offset&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Attribute&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'entry, 'unit, R&gt; !Sync for AttrsIter&lt;'abbrev, 'entry, 'unit, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R&gt; Sync for EntriesRaw&lt;'abbrev, 'unit, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R&gt; !Sync for EntriesCursor&lt;'abbrev, 'unit, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, R&gt; !Sync for EntriesTree&lt;'abbrev, 'unit, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, 'tree, R&gt; !Sync for EntriesTreeNode&lt;'abbrev, 'unit, 'tree, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'abbrev, 'unit, 'tree, R&gt; !Sync for EntriesTreeIter&lt;'abbrev, 'unit, 'tree, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugTypes&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for DebugTypesUnitHeadersIter&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'bases, Section, R&gt; Sync for CieOrFde&lt;'bases, Section, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Section as UnwindSection&lt;R&gt;&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for CfaRule&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for RegisterRule&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for CallFrameInstruction&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Pointer","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for LineInstruction&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ColumnType","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for RawLocListEntry&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for DieReference&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for Operation&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for Location&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for EvaluationResult&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as Reader&gt;::Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for RawRngListEntry&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Offset&gt; Sync for UnitType&lt;Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, Offset&gt; Sync for AttributeValue&lt;R, Offset&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offset: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ValueType","synthetic":true,"types":[]},{"text":"impl Sync for Value","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]}];
implementors["imgui"] = [{"text":"impl !Sync for Context","synthetic":true,"types":[]},{"text":"impl !Sync for SuspendedContext","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for DragFloat&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for DragFloat2&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for DragFloat3&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for DragFloat4&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for DragFloatRange2&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for DragInt&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for DragInt2&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for DragInt3&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for DragInt4&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for DragIntRange2&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl Sync for FontAtlasFlags","synthetic":true,"types":[]},{"text":"impl !Sync for FontId","synthetic":true,"types":[]},{"text":"impl !Sync for FontAtlas","synthetic":true,"types":[]},{"text":"impl !Sync for FontConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for FontAtlasTexture&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for SharedFontAtlas","synthetic":true,"types":[]},{"text":"impl !Sync for Font","synthetic":true,"types":[]},{"text":"impl Sync for FontGlyph","synthetic":true,"types":[]},{"text":"impl !Sync for FontGlyphRanges","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for InputFloat&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for InputFloat2&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for InputFloat3&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for InputFloat4&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for InputInt&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for InputInt2&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for InputInt3&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for InputInt4&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for InputText&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for InputTextMultiline&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ConfigFlags","synthetic":true,"types":[]},{"text":"impl Sync for BackendFlags","synthetic":true,"types":[]},{"text":"impl !Sync for Io","synthetic":true,"types":[]},{"text":"impl Sync for ImGuiDragDropFlags","synthetic":true,"types":[]},{"text":"impl Sync for ImDrawCornerFlags","synthetic":true,"types":[]},{"text":"impl Sync for ImDrawListFlags","synthetic":true,"types":[]},{"text":"impl Sync for ImGuiInputTextFlags","synthetic":true,"types":[]},{"text":"impl Sync for ImGuiTreeNodeFlags","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for PlotHistogram&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for PlotLines&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for PopupModal&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DrawData","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DrawListIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for DrawList","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for DrawCmdIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DrawCmdParams","synthetic":true,"types":[]},{"text":"impl Sync for DrawVert","synthetic":true,"types":[]},{"text":"impl Sync for TextureId","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Textures&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Sync for FontStackToken","synthetic":true,"types":[]},{"text":"impl !Sync for ColorStackToken","synthetic":true,"types":[]},{"text":"impl !Sync for StyleStackToken","synthetic":true,"types":[]},{"text":"impl !Sync for ItemWidthStackToken","synthetic":true,"types":[]},{"text":"impl !Sync for TextWrapPosStackToken","synthetic":true,"types":[]},{"text":"impl !Sync for ItemFlagsStackToken","synthetic":true,"types":[]},{"text":"impl !Sync for IdStackToken","synthetic":true,"types":[]},{"text":"impl Sync for ImString","synthetic":true,"types":[]},{"text":"impl Sync for ImStr","synthetic":true,"types":[]},{"text":"impl Sync for Style","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for CollapsingHeader&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !Sync for TreeNode&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ItemHoveredFlags","synthetic":true,"types":[]},{"text":"impl Sync for ColorEditFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ColorEdit&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ColorPicker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ColorButton&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ComboBoxFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ComboBox&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ComboBoxToken","synthetic":true,"types":[]},{"text":"impl Sync for Image","synthetic":true,"types":[]},{"text":"impl Sync for ImageButton","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for MenuItem&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for MainMenuBarToken","synthetic":true,"types":[]},{"text":"impl !Sync for MenuBarToken","synthetic":true,"types":[]},{"text":"impl !Sync for MenuToken","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ProgressBar&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SelectableFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Selectable&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for Slider&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for VerticalSlider&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for AngleSlider&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ChildWindow&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for ChildWindowToken","synthetic":true,"types":[]},{"text":"impl Sync for WindowHoveredFlags","synthetic":true,"types":[]},{"text":"impl Sync for WindowFocusedFlags","synthetic":true,"types":[]},{"text":"impl Sync for WindowFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Window&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for WindowToken","synthetic":true,"types":[]},{"text":"impl&lt;'ui&gt; !Sync for ChannelsSplit&lt;'ui&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ImColor","synthetic":true,"types":[]},{"text":"impl&lt;'ui&gt; !Sync for WindowDrawList&lt;'ui&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui&gt; !Sync for Ui&lt;'ui&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for FontSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for FontAtlasRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for FontAtlasRefMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Key","synthetic":true,"types":[]},{"text":"impl Sync for FocusedWidget","synthetic":true,"types":[]},{"text":"impl Sync for MouseButton","synthetic":true,"types":[]},{"text":"impl Sync for MouseCursor","synthetic":true,"types":[]},{"text":"impl Sync for NavInput","synthetic":true,"types":[]},{"text":"impl !Sync for DrawCmd","synthetic":true,"types":[]},{"text":"impl Sync for ItemFlag","synthetic":true,"types":[]},{"text":"impl Sync for StyleColor","synthetic":true,"types":[]},{"text":"impl Sync for StyleVar","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for EditableColor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ColorEditInputMode","synthetic":true,"types":[]},{"text":"impl Sync for ColorEditDisplayMode","synthetic":true,"types":[]},{"text":"impl Sync for ColorPickerMode","synthetic":true,"types":[]},{"text":"impl Sync for ColorFormat","synthetic":true,"types":[]},{"text":"impl Sync for ColorPreview","synthetic":true,"types":[]},{"text":"impl Sync for ComboBoxHeight","synthetic":true,"types":[]},{"text":"impl Sync for ComboBoxPreviewMode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Id&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Condition","synthetic":true,"types":[]},{"text":"impl Sync for Direction","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for ImVector&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DataType","synthetic":true,"types":[]}];
implementors["imgui_sys"] = [{"text":"impl Sync for ImVec2_Simple","synthetic":true,"types":[]},{"text":"impl Sync for ImVec4_Simple","synthetic":true,"types":[]},{"text":"impl Sync for ImColor_Simple","synthetic":true,"types":[]},{"text":"impl Sync for ImGuiContext","synthetic":true,"types":[]},{"text":"impl Sync for ImDrawListSharedData","synthetic":true,"types":[]},{"text":"impl !Sync for ImVector_float","synthetic":true,"types":[]},{"text":"impl !Sync for ImVector_ImWchar","synthetic":true,"types":[]},{"text":"impl !Sync for ImVector_ImDrawVert","synthetic":true,"types":[]},{"text":"impl !Sync for ImVector_ImFontGlyph","synthetic":true,"types":[]},{"text":"impl !Sync for ImVector_ImGuiTextRange","synthetic":true,"types":[]},{"text":"impl !Sync for ImVector_ImGuiStoragePair","synthetic":true,"types":[]},{"text":"impl !Sync for ImVector_ImDrawChannel","synthetic":true,"types":[]},{"text":"impl !Sync for ImVector_char","synthetic":true,"types":[]},{"text":"impl !Sync for ImVector_ImU32","synthetic":true,"types":[]},{"text":"impl !Sync for ImVector_ImFontAtlasCustomRect","synthetic":true,"types":[]},{"text":"impl !Sync for ImVector_ImTextureID","synthetic":true,"types":[]},{"text":"impl !Sync for ImVector_ImFontConfig","synthetic":true,"types":[]},{"text":"impl !Sync for ImVector_ImFontPtr","synthetic":true,"types":[]},{"text":"impl !Sync for ImVector_ImDrawCmd","synthetic":true,"types":[]},{"text":"impl !Sync for ImVector_ImVec4","synthetic":true,"types":[]},{"text":"impl !Sync for ImVector_ImDrawIdx","synthetic":true,"types":[]},{"text":"impl !Sync for ImVector_ImVec2","synthetic":true,"types":[]},{"text":"impl Sync for ImVec2","synthetic":true,"types":[]},{"text":"impl Sync for ImVec4","synthetic":true,"types":[]},{"text":"impl Sync for ImGuiStyle","synthetic":true,"types":[]},{"text":"impl !Sync for ImGuiIO","synthetic":true,"types":[]},{"text":"impl !Sync for ImGuiInputTextCallbackData","synthetic":true,"types":[]},{"text":"impl !Sync for ImGuiSizeCallbackData","synthetic":true,"types":[]},{"text":"impl !Sync for ImGuiPayload","synthetic":true,"types":[]},{"text":"impl Sync for ImGuiOnceUponAFrame","synthetic":true,"types":[]},{"text":"impl !Sync for ImGuiTextFilter","synthetic":true,"types":[]},{"text":"impl !Sync for ImGuiTextBuffer","synthetic":true,"types":[]},{"text":"impl !Sync for ImGuiStorage","synthetic":true,"types":[]},{"text":"impl Sync for ImGuiListClipper","synthetic":true,"types":[]},{"text":"impl Sync for ImColor","synthetic":true,"types":[]},{"text":"impl !Sync for ImDrawCmd","synthetic":true,"types":[]},{"text":"impl Sync for ImDrawVert","synthetic":true,"types":[]},{"text":"impl !Sync for ImDrawChannel","synthetic":true,"types":[]},{"text":"impl !Sync for ImDrawListSplitter","synthetic":true,"types":[]},{"text":"impl !Sync for ImDrawList","synthetic":true,"types":[]},{"text":"impl !Sync for ImDrawData","synthetic":true,"types":[]},{"text":"impl !Sync for ImFontConfig","synthetic":true,"types":[]},{"text":"impl Sync for ImFontGlyph","synthetic":true,"types":[]},{"text":"impl !Sync for ImFontGlyphRangesBuilder","synthetic":true,"types":[]},{"text":"impl !Sync for ImFontAtlasCustomRect","synthetic":true,"types":[]},{"text":"impl !Sync for ImFontAtlas","synthetic":true,"types":[]},{"text":"impl !Sync for ImFont","synthetic":true,"types":[]},{"text":"impl !Sync for ImGuiTextRange","synthetic":true,"types":[]},{"text":"impl !Sync for ImGuiStoragePair","synthetic":true,"types":[]},{"text":"impl !Sync for ImGuiStoragePair__bindgen_ty_1","synthetic":true,"types":[]}];
implementors["libc"] = [{"text":"impl !Sync for group","synthetic":true,"types":[]},{"text":"impl Sync for utimbuf","synthetic":true,"types":[]},{"text":"impl Sync for timeval","synthetic":true,"types":[]},{"text":"impl Sync for timespec","synthetic":true,"types":[]},{"text":"impl Sync for rlimit","synthetic":true,"types":[]},{"text":"impl Sync for rusage","synthetic":true,"types":[]},{"text":"impl Sync for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl !Sync for hostent","synthetic":true,"types":[]},{"text":"impl !Sync for iovec","synthetic":true,"types":[]},{"text":"impl Sync for pollfd","synthetic":true,"types":[]},{"text":"impl Sync for winsize","synthetic":true,"types":[]},{"text":"impl Sync for linger","synthetic":true,"types":[]},{"text":"impl !Sync for sigval","synthetic":true,"types":[]},{"text":"impl Sync for itimerval","synthetic":true,"types":[]},{"text":"impl Sync for tms","synthetic":true,"types":[]},{"text":"impl !Sync for servent","synthetic":true,"types":[]},{"text":"impl !Sync for protoent","synthetic":true,"types":[]},{"text":"impl Sync for in_addr","synthetic":true,"types":[]},{"text":"impl Sync for ip_mreq","synthetic":true,"types":[]},{"text":"impl Sync for ip_mreq_source","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl !Sync for addrinfo","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Sync for fd_set","synthetic":true,"types":[]},{"text":"impl !Sync for tm","synthetic":true,"types":[]},{"text":"impl Sync for sched_param","synthetic":true,"types":[]},{"text":"impl !Sync for Dl_info","synthetic":true,"types":[]},{"text":"impl !Sync for lconv","synthetic":true,"types":[]},{"text":"impl Sync for in_pktinfo","synthetic":true,"types":[]},{"text":"impl !Sync for ifaddrs","synthetic":true,"types":[]},{"text":"impl Sync for in6_rtmsg","synthetic":true,"types":[]},{"text":"impl Sync for arpreq","synthetic":true,"types":[]},{"text":"impl Sync for arpreq_old","synthetic":true,"types":[]},{"text":"impl Sync for arphdr","synthetic":true,"types":[]},{"text":"impl !Sync for mmsghdr","synthetic":true,"types":[]},{"text":"impl Sync for epoll_event","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Sync for utsname","synthetic":true,"types":[]},{"text":"impl !Sync for sigevent","synthetic":true,"types":[]},{"text":"impl Sync for rlimit64","synthetic":true,"types":[]},{"text":"impl !Sync for glob_t","synthetic":true,"types":[]},{"text":"impl !Sync for passwd","synthetic":true,"types":[]},{"text":"impl !Sync for spwd","synthetic":true,"types":[]},{"text":"impl Sync for dqblk","synthetic":true,"types":[]},{"text":"impl Sync for signalfd_siginfo","synthetic":true,"types":[]},{"text":"impl Sync for itimerspec","synthetic":true,"types":[]},{"text":"impl Sync for fsid_t","synthetic":true,"types":[]},{"text":"impl Sync for packet_mreq","synthetic":true,"types":[]},{"text":"impl Sync for cpu_set_t","synthetic":true,"types":[]},{"text":"impl !Sync for if_nameindex","synthetic":true,"types":[]},{"text":"impl Sync for msginfo","synthetic":true,"types":[]},{"text":"impl Sync for sembuf","synthetic":true,"types":[]},{"text":"impl Sync for input_event","synthetic":true,"types":[]},{"text":"impl Sync for input_id","synthetic":true,"types":[]},{"text":"impl Sync for input_absinfo","synthetic":true,"types":[]},{"text":"impl Sync for input_keymap_entry","synthetic":true,"types":[]},{"text":"impl Sync for input_mask","synthetic":true,"types":[]},{"text":"impl Sync for ff_replay","synthetic":true,"types":[]},{"text":"impl Sync for ff_trigger","synthetic":true,"types":[]},{"text":"impl Sync for ff_envelope","synthetic":true,"types":[]},{"text":"impl Sync for ff_constant_effect","synthetic":true,"types":[]},{"text":"impl Sync for ff_ramp_effect","synthetic":true,"types":[]},{"text":"impl Sync for ff_condition_effect","synthetic":true,"types":[]},{"text":"impl !Sync for ff_periodic_effect","synthetic":true,"types":[]},{"text":"impl Sync for ff_rumble_effect","synthetic":true,"types":[]},{"text":"impl Sync for ff_effect","synthetic":true,"types":[]},{"text":"impl !Sync for dl_phdr_info","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Ehdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Ehdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Sym","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Sym","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Phdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Phdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Shdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Shdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf32_Chdr","synthetic":true,"types":[]},{"text":"impl Sync for Elf64_Chdr","synthetic":true,"types":[]},{"text":"impl Sync for ucred","synthetic":true,"types":[]},{"text":"impl !Sync for mntent","synthetic":true,"types":[]},{"text":"impl !Sync for posix_spawn_file_actions_t","synthetic":true,"types":[]},{"text":"impl Sync for posix_spawnattr_t","synthetic":true,"types":[]},{"text":"impl Sync for genlmsghdr","synthetic":true,"types":[]},{"text":"impl Sync for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Sync for arpd_request","synthetic":true,"types":[]},{"text":"impl Sync for inotify_event","synthetic":true,"types":[]},{"text":"impl Sync for fanotify_response","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_vm","synthetic":true,"types":[]},{"text":"impl Sync for regmatch_t","synthetic":true,"types":[]},{"text":"impl Sync for sock_extended_err","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Sync for dirent","synthetic":true,"types":[]},{"text":"impl Sync for dirent64","synthetic":true,"types":[]},{"text":"impl Sync for sockaddr_alg","synthetic":true,"types":[]},{"text":"impl Sync for af_alg_iv","synthetic":true,"types":[]},{"text":"impl Sync for mq_attr","synthetic":true,"types":[]},{"text":"impl Sync for statx","synthetic":true,"types":[]},{"text":"impl Sync for statx_timestamp","synthetic":true,"types":[]},{"text":"impl !Sync for aiocb","synthetic":true,"types":[]},{"text":"impl Sync for __exit_status","synthetic":true,"types":[]},{"text":"impl Sync for __timeval","synthetic":true,"types":[]},{"text":"impl !Sync for glob64_t","synthetic":true,"types":[]},{"text":"impl !Sync for msghdr","synthetic":true,"types":[]},{"text":"impl Sync for cmsghdr","synthetic":true,"types":[]},{"text":"impl Sync for termios","synthetic":true,"types":[]},{"text":"impl Sync for mallinfo","synthetic":true,"types":[]},{"text":"impl Sync for nlmsghdr","synthetic":true,"types":[]},{"text":"impl Sync for nlmsgerr","synthetic":true,"types":[]},{"text":"impl Sync for nl_pktinfo","synthetic":true,"types":[]},{"text":"impl Sync for nl_mmap_req","synthetic":true,"types":[]},{"text":"impl Sync for nl_mmap_hdr","synthetic":true,"types":[]},{"text":"impl Sync for nlattr","synthetic":true,"types":[]},{"text":"impl !Sync for rtentry","synthetic":true,"types":[]},{"text":"impl Sync for timex","synthetic":true,"types":[]},{"text":"impl Sync for ntptimeval","synthetic":true,"types":[]},{"text":"impl !Sync for regex_t","synthetic":true,"types":[]},{"text":"impl Sync for utmpx","synthetic":true,"types":[]},{"text":"impl Sync for sigset_t","synthetic":true,"types":[]},{"text":"impl Sync for sysinfo","synthetic":true,"types":[]},{"text":"impl Sync for msqid_ds","synthetic":true,"types":[]},{"text":"impl Sync for sigaction","synthetic":true,"types":[]},{"text":"impl Sync for statfs","synthetic":true,"types":[]},{"text":"impl Sync for flock","synthetic":true,"types":[]},{"text":"impl Sync for flock64","synthetic":true,"types":[]},{"text":"impl Sync for siginfo_t","synthetic":true,"types":[]},{"text":"impl !Sync for stack_t","synthetic":true,"types":[]},{"text":"impl Sync for stat","synthetic":true,"types":[]},{"text":"impl Sync for stat64","synthetic":true,"types":[]},{"text":"impl Sync for statfs64","synthetic":true,"types":[]},{"text":"impl Sync for statvfs64","synthetic":true,"types":[]},{"text":"impl Sync for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Sync for _libc_fpxreg","synthetic":true,"types":[]},{"text":"impl Sync for _libc_xmmreg","synthetic":true,"types":[]},{"text":"impl Sync for _libc_fpstate","synthetic":true,"types":[]},{"text":"impl Sync for user_regs_struct","synthetic":true,"types":[]},{"text":"impl !Sync for user","synthetic":true,"types":[]},{"text":"impl !Sync for mcontext_t","synthetic":true,"types":[]},{"text":"impl Sync for ipc_perm","synthetic":true,"types":[]},{"text":"impl Sync for shmid_ds","synthetic":true,"types":[]},{"text":"impl Sync for termios2","synthetic":true,"types":[]},{"text":"impl Sync for ip_mreqn","synthetic":true,"types":[]},{"text":"impl Sync for user_fpregs_struct","synthetic":true,"types":[]},{"text":"impl !Sync for ucontext_t","synthetic":true,"types":[]},{"text":"impl Sync for statvfs","synthetic":true,"types":[]},{"text":"impl Sync for max_align_t","synthetic":true,"types":[]},{"text":"impl Sync for sem_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Sync for fanotify_event_metadata","synthetic":true,"types":[]},{"text":"impl Sync for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Sync for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Sync for in6_addr","synthetic":true,"types":[]},{"text":"impl Sync for DIR","synthetic":true,"types":[]},{"text":"impl Sync for FILE","synthetic":true,"types":[]},{"text":"impl Sync for fpos_t","synthetic":true,"types":[]},{"text":"impl Sync for timezone","synthetic":true,"types":[]},{"text":"impl Sync for fpos64_t","synthetic":true,"types":[]}];
implementors["lock_api"] = [{"text":"impl Sync for GuardSend","synthetic":true,"types":[]},{"text":"impl !Sync for GuardNoSend","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex + Sync, T:&nbsp;?Sized + Send&gt; Sync for Mutex&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MutexGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedMutexGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex + Sync, G:&nbsp;GetThreadId + Sync, T:&nbsp;?Sized + Send&gt; Sync for ReentrantMutex&lt;R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, G:&nbsp;GetThreadId + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for ReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawMutex + Sync + 'a, G:&nbsp;GetThreadId + Sync + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawRwLock + Sync, T:&nbsp;?Sized + Send + Sync&gt; Sync for RwLock&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for RwLockReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for RwLockWriteGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLockUpgrade + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for RwLockUpgradableReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedRwLockReadGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, R:&nbsp;RawRwLock + 'a, T:&nbsp;?Sized + Sync + 'a&gt; Sync for MappedRwLockWriteGuard&lt;'a, R, T&gt;","synthetic":false,"types":[]}];
implementors["miniz_oxide"] = [{"text":"impl Sync for StreamResult","synthetic":true,"types":[]},{"text":"impl Sync for MZFlush","synthetic":true,"types":[]},{"text":"impl Sync for MZStatus","synthetic":true,"types":[]},{"text":"impl Sync for MZError","synthetic":true,"types":[]},{"text":"impl Sync for DataFormat","synthetic":true,"types":[]},{"text":"impl Sync for CompressionLevel","synthetic":true,"types":[]},{"text":"impl Sync for CompressorOxide","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for CallbackFunc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for CompressionStrategy","synthetic":true,"types":[]},{"text":"impl Sync for TDEFLFlush","synthetic":true,"types":[]},{"text":"impl Sync for TDEFLStatus","synthetic":true,"types":[]},{"text":"impl Sync for TINFLStatus","synthetic":true,"types":[]},{"text":"impl Sync for DecompressorOxide","synthetic":true,"types":[]},{"text":"impl Sync for MinReset","synthetic":true,"types":[]},{"text":"impl Sync for ZeroReset","synthetic":true,"types":[]},{"text":"impl Sync for FullReset","synthetic":true,"types":[]},{"text":"impl Sync for InflateState","synthetic":true,"types":[]}];
implementors["object"] = [{"text":"impl Sync for Architecture","synthetic":true,"types":[]},{"text":"impl Sync for AddressSize","synthetic":true,"types":[]},{"text":"impl Sync for BinaryFormat","synthetic":true,"types":[]},{"text":"impl Sync for SectionKind","synthetic":true,"types":[]},{"text":"impl Sync for ComdatKind","synthetic":true,"types":[]},{"text":"impl Sync for SymbolKind","synthetic":true,"types":[]},{"text":"impl Sync for SymbolScope","synthetic":true,"types":[]},{"text":"impl Sync for RelocationKind","synthetic":true,"types":[]},{"text":"impl Sync for RelocationEncoding","synthetic":true,"types":[]},{"text":"impl Sync for FileFlags","synthetic":true,"types":[]},{"text":"impl Sync for SectionFlags","synthetic":true,"types":[]},{"text":"impl&lt;Section&gt; Sync for SymbolFlags&lt;Section&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for LittleEndian","synthetic":true,"types":[]},{"text":"impl Sync for BigEndian","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for U16Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for U32Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for U64Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for I16Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for I32Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for I64Bytes&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Endianness","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for Bytes&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for StringTable&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for File&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for SegmentIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for Segment&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for SectionIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for Section&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for ComdatIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for Comdat&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for ComdatSectionIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for SymbolTable&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for SymbolIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for Symbol&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for RelocationIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for SectionIndex","synthetic":true,"types":[]},{"text":"impl Sync for SymbolIndex","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SymbolMap&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for SymbolMapName&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for ObjectMap&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for ObjectMapEntry&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Relocation","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for CompressedData&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SymbolSection","synthetic":true,"types":[]},{"text":"impl Sync for RelocationTarget","synthetic":true,"types":[]},{"text":"impl Sync for CompressionFormat","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for ArchiveFile&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for ArchiveMemberIterator&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for ArchiveMember&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ArchiveKind","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for CoffFile&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for SectionTable&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffSegmentIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffSegment&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffSectionIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffSection&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data&gt; Sync for SymbolTable&lt;'data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffSymbolTable&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffSymbolIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffSymbol&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffRelocationIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffComdatIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffComdat&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for CoffComdatSectionIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Sync for ElfFile&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfSegmentIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfSegment&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Sync for SectionTable&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfSectionIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfSection&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Sync for SymbolTable&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfSymbolTable&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfSymbolIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfSymbol&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RelocationSections","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfRelocationIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Rel: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Rela: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Sync for ElfNoteIterator&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Elf&gt; Sync for ElfNote&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::NoteHeader: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfComdatIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfComdat&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Elf&gt; Sync for ElfComdatSectionIterator&lt;'data, 'file, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::ProgramHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::SectionHeader: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Elf as FileHeader&gt;::Sym: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Mach&gt; Sync for MachOFile&lt;'data, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOComdatIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOComdat&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOComdatSectionIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOSegmentIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOSegment&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Segment: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOSectionIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOSection&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Mach&gt; Sync for SymbolTable&lt;'data, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOSymbolTable&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOSymbolIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachOSymbol&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Mach&gt; Sync for MachORelocationIterator&lt;'data, 'file, Mach&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Mach: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Endian: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Nlist: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Mach as MachHeader&gt;::Section: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, Pe&gt; Sync for PeFile&lt;'data, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Sync for PeComdatIterator&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Sync for PeComdat&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Sync for PeComdatSectionIterator&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Sync for PeSegmentIterator&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Sync for PeSegment&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Sync for PeSectionIterator&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file, Pe&gt; Sync for PeSection&lt;'data, 'file, Pe&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pe: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'data, 'file&gt; Sync for PeRelocationIterator&lt;'data, 'file&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Header","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for FileHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for FileHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Ident","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SectionHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SectionHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for CompressionHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for CompressionHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Sym32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Sym64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Syminfo32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Syminfo64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Rel32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Rela32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Rel64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Rela64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for ProgramHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for ProgramHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Dyn32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Dyn64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for NoteHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for NoteHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for FatHeader","synthetic":true,"types":[]},{"text":"impl Sync for FatArch32","synthetic":true,"types":[]},{"text":"impl Sync for FatArch64","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for MachHeader32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for MachHeader64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for LoadCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for LcStr&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SegmentCommand32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SegmentCommand64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Section32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Section64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Fvmlib&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for FvmlibCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Dylib&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for DylibCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SubFrameworkCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SubClientCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SubUmbrellaCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SubLibraryCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for PreboundDylibCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for DylinkerCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for ThreadCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for RoutinesCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for RoutinesCommand_64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SymtabCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for DysymtabCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for DylibTableOfContents&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for DylibModule32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for DylibModule64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for DylibReference&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for TwolevelHintsCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for TwolevelHint&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for PrebindCksumCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for UuidCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for RpathCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for LinkeditDataCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for EncryptionInfoCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for EncryptionInfoCommand64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for VersionMinCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for BuildVersionCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for BuildToolVersion&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for DyldInfoCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for LinkerOptionCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SymSegCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for IdentCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for FvmfileCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for EntryPointCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for SourceVersionCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for DataInCodeEntry&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for NoteCommand&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Nlist32&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Nlist64&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Sync for Relocation&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RelocationInfo","synthetic":true,"types":[]},{"text":"impl Sync for ScatteredRelocationInfo","synthetic":true,"types":[]},{"text":"impl Sync for ImageDosHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageOs2Header","synthetic":true,"types":[]},{"text":"impl Sync for ImageVxdHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageFileHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageDataDirectory","synthetic":true,"types":[]},{"text":"impl Sync for ImageOptionalHeader32","synthetic":true,"types":[]},{"text":"impl Sync for ImageRomOptionalHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageOptionalHeader64","synthetic":true,"types":[]},{"text":"impl Sync for ImageNtHeaders64","synthetic":true,"types":[]},{"text":"impl Sync for ImageNtHeaders32","synthetic":true,"types":[]},{"text":"impl Sync for ImageRomHeaders","synthetic":true,"types":[]},{"text":"impl Sync for Guid","synthetic":true,"types":[]},{"text":"impl Sync for AnonObjectHeader","synthetic":true,"types":[]},{"text":"impl Sync for AnonObjectHeaderV2","synthetic":true,"types":[]},{"text":"impl Sync for AnonObjectHeaderBigobj","synthetic":true,"types":[]},{"text":"impl Sync for ImageSectionHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageSymbol","synthetic":true,"types":[]},{"text":"impl Sync for ImageSymbolBytes","synthetic":true,"types":[]},{"text":"impl Sync for ImageSymbolEx","synthetic":true,"types":[]},{"text":"impl Sync for ImageSymbolExBytes","synthetic":true,"types":[]},{"text":"impl Sync for ImageAuxSymbolTokenDef","synthetic":true,"types":[]},{"text":"impl Sync for ImageAuxSymbolFunction","synthetic":true,"types":[]},{"text":"impl Sync for ImageAuxSymbolFunctionBeginEnd","synthetic":true,"types":[]},{"text":"impl Sync for ImageAuxSymbolWeak","synthetic":true,"types":[]},{"text":"impl Sync for ImageAuxSymbolSection","synthetic":true,"types":[]},{"text":"impl Sync for ImageAuxSymbolCrc","synthetic":true,"types":[]},{"text":"impl Sync for ImageRelocation","synthetic":true,"types":[]},{"text":"impl Sync for ImageLinenumber","synthetic":true,"types":[]},{"text":"impl Sync for ImageBaseRelocation","synthetic":true,"types":[]},{"text":"impl Sync for ImageArchiveMemberHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageExportDirectory","synthetic":true,"types":[]},{"text":"impl Sync for ImageImportByName","synthetic":true,"types":[]},{"text":"impl Sync for ImageTlsDirectory64","synthetic":true,"types":[]},{"text":"impl Sync for ImageTlsDirectory32","synthetic":true,"types":[]},{"text":"impl Sync for ImageImportDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for ImageBoundImportDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for ImageBoundForwarderRef","synthetic":true,"types":[]},{"text":"impl Sync for ImageDelayloadDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for ImageResourceDirectory","synthetic":true,"types":[]},{"text":"impl Sync for ImageResourceDirectoryEntry","synthetic":true,"types":[]},{"text":"impl Sync for ImageResourceDirectoryString","synthetic":true,"types":[]},{"text":"impl Sync for ImageResourceDirStringU","synthetic":true,"types":[]},{"text":"impl Sync for ImageResourceDataEntry","synthetic":true,"types":[]},{"text":"impl Sync for ImageLoadConfigCodeIntegrity","synthetic":true,"types":[]},{"text":"impl Sync for ImageDynamicRelocationTable","synthetic":true,"types":[]},{"text":"impl Sync for ImageDynamicRelocation32","synthetic":true,"types":[]},{"text":"impl Sync for ImageDynamicRelocation64","synthetic":true,"types":[]},{"text":"impl Sync for ImageDynamicRelocation32V2","synthetic":true,"types":[]},{"text":"impl Sync for ImageDynamicRelocation64V2","synthetic":true,"types":[]},{"text":"impl Sync for ImagePrologueDynamicRelocationHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageEpilogueDynamicRelocationHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageLoadConfigDirectory32","synthetic":true,"types":[]},{"text":"impl Sync for ImageLoadConfigDirectory64","synthetic":true,"types":[]},{"text":"impl Sync for ImageHotPatchInfo","synthetic":true,"types":[]},{"text":"impl Sync for ImageHotPatchBase","synthetic":true,"types":[]},{"text":"impl Sync for ImageHotPatchHashes","synthetic":true,"types":[]},{"text":"impl Sync for ImageArmRuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Sync for ImageArm64RuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Sync for ImageAlpha64RuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Sync for ImageAlphaRuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Sync for ImageRuntimeFunctionEntry","synthetic":true,"types":[]},{"text":"impl Sync for ImageEnclaveConfig32","synthetic":true,"types":[]},{"text":"impl Sync for ImageEnclaveConfig64","synthetic":true,"types":[]},{"text":"impl Sync for ImageEnclaveImport","synthetic":true,"types":[]},{"text":"impl Sync for ImageDebugDirectory","synthetic":true,"types":[]},{"text":"impl Sync for ImageCoffSymbolsHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageDebugMisc","synthetic":true,"types":[]},{"text":"impl Sync for ImageFunctionEntry","synthetic":true,"types":[]},{"text":"impl Sync for ImageFunctionEntry64","synthetic":true,"types":[]},{"text":"impl Sync for ImageSeparateDebugHeader","synthetic":true,"types":[]},{"text":"impl Sync for NonPagedDebugInfo","synthetic":true,"types":[]},{"text":"impl Sync for ImageArchitectureEntry","synthetic":true,"types":[]},{"text":"impl Sync for ImportObjectHeader","synthetic":true,"types":[]},{"text":"impl Sync for ImageCor20Header","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Sync for Condvar","synthetic":true,"types":[]},{"text":"impl Sync for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl Sync for Once","synthetic":true,"types":[]},{"text":"impl Sync for RawMutex","synthetic":true,"types":[]},{"text":"impl Sync for RawRwLock","synthetic":true,"types":[]},{"text":"impl Sync for RawThreadId","synthetic":true,"types":[]},{"text":"impl Sync for OnceState","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Sync for ParkToken","synthetic":true,"types":[]},{"text":"impl Sync for UnparkResult","synthetic":true,"types":[]},{"text":"impl Sync for UnparkToken","synthetic":true,"types":[]},{"text":"impl Sync for SpinWait","synthetic":true,"types":[]},{"text":"impl Sync for FilterOp","synthetic":true,"types":[]},{"text":"impl Sync for ParkResult","synthetic":true,"types":[]},{"text":"impl Sync for RequeueOp","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl !Sync for TokenStream","synthetic":true,"types":[]},{"text":"impl !Sync for LexError","synthetic":true,"types":[]},{"text":"impl !Sync for Span","synthetic":true,"types":[]},{"text":"impl !Sync for Group","synthetic":true,"types":[]},{"text":"impl !Sync for Punct","synthetic":true,"types":[]},{"text":"impl !Sync for Ident","synthetic":true,"types":[]},{"text":"impl !Sync for Literal","synthetic":true,"types":[]},{"text":"impl !Sync for TokenTree","synthetic":true,"types":[]},{"text":"impl Sync for Delimiter","synthetic":true,"types":[]},{"text":"impl Sync for Spacing","synthetic":true,"types":[]},{"text":"impl !Sync for IntoIter","synthetic":true,"types":[]}];
implementors["rustc_demangle"] = [{"text":"impl&lt;'a&gt; Sync for Demangle&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for TryDemangleError","synthetic":true,"types":[]}];
implementors["scopeguard"] = [{"text":"impl Sync for Always","synthetic":true,"types":[]},{"text":"impl&lt;T, F, S&gt; Sync for ScopeGuard&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: FnOnce(T),<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Strategy,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;'a, T&gt; Sync for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl !Sync for Attribute","synthetic":true,"types":[]},{"text":"impl !Sync for MetaList","synthetic":true,"types":[]},{"text":"impl !Sync for MetaNameValue","synthetic":true,"types":[]},{"text":"impl !Sync for Field","synthetic":true,"types":[]},{"text":"impl !Sync for FieldsNamed","synthetic":true,"types":[]},{"text":"impl !Sync for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl !Sync for Variant","synthetic":true,"types":[]},{"text":"impl !Sync for VisCrate","synthetic":true,"types":[]},{"text":"impl !Sync for VisPublic","synthetic":true,"types":[]},{"text":"impl !Sync for VisRestricted","synthetic":true,"types":[]},{"text":"impl !Sync for ExprArray","synthetic":true,"types":[]},{"text":"impl !Sync for ExprAssign","synthetic":true,"types":[]},{"text":"impl !Sync for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl !Sync for ExprAsync","synthetic":true,"types":[]},{"text":"impl !Sync for ExprAwait","synthetic":true,"types":[]},{"text":"impl !Sync for ExprBinary","synthetic":true,"types":[]},{"text":"impl !Sync for ExprBlock","synthetic":true,"types":[]},{"text":"impl !Sync for ExprBox","synthetic":true,"types":[]},{"text":"impl !Sync for ExprBreak","synthetic":true,"types":[]},{"text":"impl !Sync for ExprCall","synthetic":true,"types":[]},{"text":"impl !Sync for ExprCast","synthetic":true,"types":[]},{"text":"impl !Sync for ExprClosure","synthetic":true,"types":[]},{"text":"impl !Sync for ExprContinue","synthetic":true,"types":[]},{"text":"impl !Sync for ExprField","synthetic":true,"types":[]},{"text":"impl !Sync for ExprForLoop","synthetic":true,"types":[]},{"text":"impl !Sync for ExprGroup","synthetic":true,"types":[]},{"text":"impl !Sync for ExprIf","synthetic":true,"types":[]},{"text":"impl !Sync for ExprIndex","synthetic":true,"types":[]},{"text":"impl !Sync for ExprLet","synthetic":true,"types":[]},{"text":"impl !Sync for ExprLit","synthetic":true,"types":[]},{"text":"impl !Sync for ExprLoop","synthetic":true,"types":[]},{"text":"impl !Sync for ExprMacro","synthetic":true,"types":[]},{"text":"impl !Sync for ExprMatch","synthetic":true,"types":[]},{"text":"impl !Sync for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl !Sync for ExprParen","synthetic":true,"types":[]},{"text":"impl !Sync for ExprPath","synthetic":true,"types":[]},{"text":"impl !Sync for ExprRange","synthetic":true,"types":[]},{"text":"impl !Sync for ExprReference","synthetic":true,"types":[]},{"text":"impl !Sync for ExprRepeat","synthetic":true,"types":[]},{"text":"impl !Sync for ExprReturn","synthetic":true,"types":[]},{"text":"impl !Sync for ExprStruct","synthetic":true,"types":[]},{"text":"impl !Sync for ExprTry","synthetic":true,"types":[]},{"text":"impl !Sync for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl !Sync for ExprTuple","synthetic":true,"types":[]},{"text":"impl !Sync for ExprType","synthetic":true,"types":[]},{"text":"impl !Sync for ExprUnary","synthetic":true,"types":[]},{"text":"impl !Sync for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl !Sync for ExprWhile","synthetic":true,"types":[]},{"text":"impl !Sync for ExprYield","synthetic":true,"types":[]},{"text":"impl !Sync for Index","synthetic":true,"types":[]},{"text":"impl !Sync for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl !Sync for ConstParam","synthetic":true,"types":[]},{"text":"impl !Sync for Generics","synthetic":true,"types":[]},{"text":"impl !Sync for LifetimeDef","synthetic":true,"types":[]},{"text":"impl !Sync for PredicateEq","synthetic":true,"types":[]},{"text":"impl !Sync for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl !Sync for PredicateType","synthetic":true,"types":[]},{"text":"impl !Sync for TraitBound","synthetic":true,"types":[]},{"text":"impl !Sync for TypeParam","synthetic":true,"types":[]},{"text":"impl !Sync for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Sync for Lifetime","synthetic":true,"types":[]},{"text":"impl !Sync for LitBool","synthetic":true,"types":[]},{"text":"impl !Sync for LitByte","synthetic":true,"types":[]},{"text":"impl !Sync for LitByteStr","synthetic":true,"types":[]},{"text":"impl !Sync for LitChar","synthetic":true,"types":[]},{"text":"impl !Sync for LitFloat","synthetic":true,"types":[]},{"text":"impl !Sync for LitInt","synthetic":true,"types":[]},{"text":"impl !Sync for LitStr","synthetic":true,"types":[]},{"text":"impl !Sync for Macro","synthetic":true,"types":[]},{"text":"impl !Sync for DataEnum","synthetic":true,"types":[]},{"text":"impl !Sync for DataStruct","synthetic":true,"types":[]},{"text":"impl !Sync for DataUnion","synthetic":true,"types":[]},{"text":"impl !Sync for DeriveInput","synthetic":true,"types":[]},{"text":"impl !Sync for Abi","synthetic":true,"types":[]},{"text":"impl !Sync for BareFnArg","synthetic":true,"types":[]},{"text":"impl !Sync for TypeArray","synthetic":true,"types":[]},{"text":"impl !Sync for TypeBareFn","synthetic":true,"types":[]},{"text":"impl !Sync for TypeGroup","synthetic":true,"types":[]},{"text":"impl !Sync for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl !Sync for TypeInfer","synthetic":true,"types":[]},{"text":"impl !Sync for TypeMacro","synthetic":true,"types":[]},{"text":"impl !Sync for TypeNever","synthetic":true,"types":[]},{"text":"impl !Sync for TypeParen","synthetic":true,"types":[]},{"text":"impl !Sync for TypePath","synthetic":true,"types":[]},{"text":"impl !Sync for TypePtr","synthetic":true,"types":[]},{"text":"impl !Sync for TypeReference","synthetic":true,"types":[]},{"text":"impl !Sync for TypeSlice","synthetic":true,"types":[]},{"text":"impl !Sync for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl !Sync for TypeTuple","synthetic":true,"types":[]},{"text":"impl !Sync for Variadic","synthetic":true,"types":[]},{"text":"impl !Sync for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl !Sync for Binding","synthetic":true,"types":[]},{"text":"impl !Sync for Constraint","synthetic":true,"types":[]},{"text":"impl !Sync for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl !Sync for Path","synthetic":true,"types":[]},{"text":"impl !Sync for PathSegment","synthetic":true,"types":[]},{"text":"impl !Sync for QSelf","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl !Sync for AttrStyle","synthetic":true,"types":[]},{"text":"impl !Sync for Meta","synthetic":true,"types":[]},{"text":"impl !Sync for NestedMeta","synthetic":true,"types":[]},{"text":"impl !Sync for Fields","synthetic":true,"types":[]},{"text":"impl !Sync for Visibility","synthetic":true,"types":[]},{"text":"impl !Sync for Expr","synthetic":true,"types":[]},{"text":"impl !Sync for Member","synthetic":true,"types":[]},{"text":"impl !Sync for GenericParam","synthetic":true,"types":[]},{"text":"impl !Sync for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl !Sync for TypeParamBound","synthetic":true,"types":[]},{"text":"impl !Sync for WherePredicate","synthetic":true,"types":[]},{"text":"impl !Sync for Lit","synthetic":true,"types":[]},{"text":"impl Sync for StrStyle","synthetic":true,"types":[]},{"text":"impl !Sync for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl !Sync for Data","synthetic":true,"types":[]},{"text":"impl !Sync for BinOp","synthetic":true,"types":[]},{"text":"impl !Sync for UnOp","synthetic":true,"types":[]},{"text":"impl !Sync for ReturnType","synthetic":true,"types":[]},{"text":"impl !Sync for Type","synthetic":true,"types":[]},{"text":"impl !Sync for GenericArgument","synthetic":true,"types":[]},{"text":"impl !Sync for PathArguments","synthetic":true,"types":[]},{"text":"impl !Sync for Underscore","synthetic":true,"types":[]},{"text":"impl !Sync for Abstract","synthetic":true,"types":[]},{"text":"impl !Sync for As","synthetic":true,"types":[]},{"text":"impl !Sync for Async","synthetic":true,"types":[]},{"text":"impl !Sync for Auto","synthetic":true,"types":[]},{"text":"impl !Sync for Await","synthetic":true,"types":[]},{"text":"impl !Sync for Become","synthetic":true,"types":[]},{"text":"impl !Sync for Box","synthetic":true,"types":[]},{"text":"impl !Sync for Break","synthetic":true,"types":[]},{"text":"impl !Sync for Const","synthetic":true,"types":[]},{"text":"impl !Sync for Continue","synthetic":true,"types":[]},{"text":"impl !Sync for Crate","synthetic":true,"types":[]},{"text":"impl !Sync for Default","synthetic":true,"types":[]},{"text":"impl !Sync for Do","synthetic":true,"types":[]},{"text":"impl !Sync for Dyn","synthetic":true,"types":[]},{"text":"impl !Sync for Else","synthetic":true,"types":[]},{"text":"impl !Sync for Enum","synthetic":true,"types":[]},{"text":"impl !Sync for Extern","synthetic":true,"types":[]},{"text":"impl !Sync for Final","synthetic":true,"types":[]},{"text":"impl !Sync for Fn","synthetic":true,"types":[]},{"text":"impl !Sync for For","synthetic":true,"types":[]},{"text":"impl !Sync for If","synthetic":true,"types":[]},{"text":"impl !Sync for Impl","synthetic":true,"types":[]},{"text":"impl !Sync for In","synthetic":true,"types":[]},{"text":"impl !Sync for Let","synthetic":true,"types":[]},{"text":"impl !Sync for Loop","synthetic":true,"types":[]},{"text":"impl !Sync for Macro","synthetic":true,"types":[]},{"text":"impl !Sync for Match","synthetic":true,"types":[]},{"text":"impl !Sync for Mod","synthetic":true,"types":[]},{"text":"impl !Sync for Move","synthetic":true,"types":[]},{"text":"impl !Sync for Mut","synthetic":true,"types":[]},{"text":"impl !Sync for Override","synthetic":true,"types":[]},{"text":"impl !Sync for Priv","synthetic":true,"types":[]},{"text":"impl !Sync for Pub","synthetic":true,"types":[]},{"text":"impl !Sync for Ref","synthetic":true,"types":[]},{"text":"impl !Sync for Return","synthetic":true,"types":[]},{"text":"impl !Sync for SelfType","synthetic":true,"types":[]},{"text":"impl !Sync for SelfValue","synthetic":true,"types":[]},{"text":"impl !Sync for Static","synthetic":true,"types":[]},{"text":"impl !Sync for Struct","synthetic":true,"types":[]},{"text":"impl !Sync for Super","synthetic":true,"types":[]},{"text":"impl !Sync for Trait","synthetic":true,"types":[]},{"text":"impl !Sync for Try","synthetic":true,"types":[]},{"text":"impl !Sync for Type","synthetic":true,"types":[]},{"text":"impl !Sync for Typeof","synthetic":true,"types":[]},{"text":"impl !Sync for Union","synthetic":true,"types":[]},{"text":"impl !Sync for Unsafe","synthetic":true,"types":[]},{"text":"impl !Sync for Unsized","synthetic":true,"types":[]},{"text":"impl !Sync for Use","synthetic":true,"types":[]},{"text":"impl !Sync for Virtual","synthetic":true,"types":[]},{"text":"impl !Sync for Where","synthetic":true,"types":[]},{"text":"impl !Sync for While","synthetic":true,"types":[]},{"text":"impl !Sync for Yield","synthetic":true,"types":[]},{"text":"impl !Sync for Add","synthetic":true,"types":[]},{"text":"impl !Sync for AddEq","synthetic":true,"types":[]},{"text":"impl !Sync for And","synthetic":true,"types":[]},{"text":"impl !Sync for AndAnd","synthetic":true,"types":[]},{"text":"impl !Sync for AndEq","synthetic":true,"types":[]},{"text":"impl !Sync for At","synthetic":true,"types":[]},{"text":"impl !Sync for Bang","synthetic":true,"types":[]},{"text":"impl !Sync for Caret","synthetic":true,"types":[]},{"text":"impl !Sync for CaretEq","synthetic":true,"types":[]},{"text":"impl !Sync for Colon","synthetic":true,"types":[]},{"text":"impl !Sync for Colon2","synthetic":true,"types":[]},{"text":"impl !Sync for Comma","synthetic":true,"types":[]},{"text":"impl !Sync for Div","synthetic":true,"types":[]},{"text":"impl !Sync for DivEq","synthetic":true,"types":[]},{"text":"impl !Sync for Dollar","synthetic":true,"types":[]},{"text":"impl !Sync for Dot","synthetic":true,"types":[]},{"text":"impl !Sync for Dot2","synthetic":true,"types":[]},{"text":"impl !Sync for Dot3","synthetic":true,"types":[]},{"text":"impl !Sync for DotDotEq","synthetic":true,"types":[]},{"text":"impl !Sync for Eq","synthetic":true,"types":[]},{"text":"impl !Sync for EqEq","synthetic":true,"types":[]},{"text":"impl !Sync for Ge","synthetic":true,"types":[]},{"text":"impl !Sync for Gt","synthetic":true,"types":[]},{"text":"impl !Sync for Le","synthetic":true,"types":[]},{"text":"impl !Sync for Lt","synthetic":true,"types":[]},{"text":"impl !Sync for MulEq","synthetic":true,"types":[]},{"text":"impl !Sync for Ne","synthetic":true,"types":[]},{"text":"impl !Sync for Or","synthetic":true,"types":[]},{"text":"impl !Sync for OrEq","synthetic":true,"types":[]},{"text":"impl !Sync for OrOr","synthetic":true,"types":[]},{"text":"impl !Sync for Pound","synthetic":true,"types":[]},{"text":"impl !Sync for Question","synthetic":true,"types":[]},{"text":"impl !Sync for RArrow","synthetic":true,"types":[]},{"text":"impl !Sync for LArrow","synthetic":true,"types":[]},{"text":"impl !Sync for Rem","synthetic":true,"types":[]},{"text":"impl !Sync for RemEq","synthetic":true,"types":[]},{"text":"impl !Sync for FatArrow","synthetic":true,"types":[]},{"text":"impl !Sync for Semi","synthetic":true,"types":[]},{"text":"impl !Sync for Shl","synthetic":true,"types":[]},{"text":"impl !Sync for ShlEq","synthetic":true,"types":[]},{"text":"impl !Sync for Shr","synthetic":true,"types":[]},{"text":"impl !Sync for ShrEq","synthetic":true,"types":[]},{"text":"impl !Sync for Star","synthetic":true,"types":[]},{"text":"impl !Sync for Sub","synthetic":true,"types":[]},{"text":"impl !Sync for SubEq","synthetic":true,"types":[]},{"text":"impl !Sync for Tilde","synthetic":true,"types":[]},{"text":"impl !Sync for Brace","synthetic":true,"types":[]},{"text":"impl !Sync for Bracket","synthetic":true,"types":[]},{"text":"impl !Sync for Paren","synthetic":true,"types":[]},{"text":"impl !Sync for Group","synthetic":true,"types":[]},{"text":"impl !Sync for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Sync for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Sync for Pairs&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Sync for PairsMut&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Sync for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Sync for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; !Sync for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Nothing","synthetic":true,"types":[]}];
implementors["synstructure"] = [{"text":"impl&lt;'a&gt; !Sync for BindingInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for VariantAst&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for VariantInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Structure&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for AddBounds","synthetic":true,"types":[]},{"text":"impl Sync for BindStyle","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()