(function() {var implementors = {};
implementors["syn"] = [{"text":"impl ToTokens for Underscore","synthetic":false,"types":[]},{"text":"impl ToTokens for Abstract","synthetic":false,"types":[]},{"text":"impl ToTokens for As","synthetic":false,"types":[]},{"text":"impl ToTokens for Async","synthetic":false,"types":[]},{"text":"impl ToTokens for Auto","synthetic":false,"types":[]},{"text":"impl ToTokens for Await","synthetic":false,"types":[]},{"text":"impl ToTokens for Become","synthetic":false,"types":[]},{"text":"impl ToTokens for Box","synthetic":false,"types":[]},{"text":"impl ToTokens for Break","synthetic":false,"types":[]},{"text":"impl ToTokens for Const","synthetic":false,"types":[]},{"text":"impl ToTokens for Continue","synthetic":false,"types":[]},{"text":"impl ToTokens for Crate","synthetic":false,"types":[]},{"text":"impl ToTokens for Default","synthetic":false,"types":[]},{"text":"impl ToTokens for Do","synthetic":false,"types":[]},{"text":"impl ToTokens for Dyn","synthetic":false,"types":[]},{"text":"impl ToTokens for Else","synthetic":false,"types":[]},{"text":"impl ToTokens for Enum","synthetic":false,"types":[]},{"text":"impl ToTokens for Extern","synthetic":false,"types":[]},{"text":"impl ToTokens for Final","synthetic":false,"types":[]},{"text":"impl ToTokens for Fn","synthetic":false,"types":[]},{"text":"impl ToTokens for For","synthetic":false,"types":[]},{"text":"impl ToTokens for If","synthetic":false,"types":[]},{"text":"impl ToTokens for Impl","synthetic":false,"types":[]},{"text":"impl ToTokens for In","synthetic":false,"types":[]},{"text":"impl ToTokens for Let","synthetic":false,"types":[]},{"text":"impl ToTokens for Loop","synthetic":false,"types":[]},{"text":"impl ToTokens for Macro","synthetic":false,"types":[]},{"text":"impl ToTokens for Match","synthetic":false,"types":[]},{"text":"impl ToTokens for Mod","synthetic":false,"types":[]},{"text":"impl ToTokens for Move","synthetic":false,"types":[]},{"text":"impl ToTokens for Mut","synthetic":false,"types":[]},{"text":"impl ToTokens for Override","synthetic":false,"types":[]},{"text":"impl ToTokens for Priv","synthetic":false,"types":[]},{"text":"impl ToTokens for Pub","synthetic":false,"types":[]},{"text":"impl ToTokens for Ref","synthetic":false,"types":[]},{"text":"impl ToTokens for Return","synthetic":false,"types":[]},{"text":"impl ToTokens for SelfType","synthetic":false,"types":[]},{"text":"impl ToTokens for SelfValue","synthetic":false,"types":[]},{"text":"impl ToTokens for Static","synthetic":false,"types":[]},{"text":"impl ToTokens for Struct","synthetic":false,"types":[]},{"text":"impl ToTokens for Super","synthetic":false,"types":[]},{"text":"impl ToTokens for Trait","synthetic":false,"types":[]},{"text":"impl ToTokens for Try","synthetic":false,"types":[]},{"text":"impl ToTokens for Type","synthetic":false,"types":[]},{"text":"impl ToTokens for Typeof","synthetic":false,"types":[]},{"text":"impl ToTokens for Union","synthetic":false,"types":[]},{"text":"impl ToTokens for Unsafe","synthetic":false,"types":[]},{"text":"impl ToTokens for Unsized","synthetic":false,"types":[]},{"text":"impl ToTokens for Use","synthetic":false,"types":[]},{"text":"impl ToTokens for Virtual","synthetic":false,"types":[]},{"text":"impl ToTokens for Where","synthetic":false,"types":[]},{"text":"impl ToTokens for While","synthetic":false,"types":[]},{"text":"impl ToTokens for Yield","synthetic":false,"types":[]},{"text":"impl ToTokens for Add","synthetic":false,"types":[]},{"text":"impl ToTokens for AddEq","synthetic":false,"types":[]},{"text":"impl ToTokens for And","synthetic":false,"types":[]},{"text":"impl ToTokens for AndAnd","synthetic":false,"types":[]},{"text":"impl ToTokens for AndEq","synthetic":false,"types":[]},{"text":"impl ToTokens for At","synthetic":false,"types":[]},{"text":"impl ToTokens for Bang","synthetic":false,"types":[]},{"text":"impl ToTokens for Caret","synthetic":false,"types":[]},{"text":"impl ToTokens for CaretEq","synthetic":false,"types":[]},{"text":"impl ToTokens for Colon","synthetic":false,"types":[]},{"text":"impl ToTokens for Colon2","synthetic":false,"types":[]},{"text":"impl ToTokens for Comma","synthetic":false,"types":[]},{"text":"impl ToTokens for Div","synthetic":false,"types":[]},{"text":"impl ToTokens for DivEq","synthetic":false,"types":[]},{"text":"impl ToTokens for Dollar","synthetic":false,"types":[]},{"text":"impl ToTokens for Dot","synthetic":false,"types":[]},{"text":"impl ToTokens for Dot2","synthetic":false,"types":[]},{"text":"impl ToTokens for Dot3","synthetic":false,"types":[]},{"text":"impl ToTokens for DotDotEq","synthetic":false,"types":[]},{"text":"impl ToTokens for Eq","synthetic":false,"types":[]},{"text":"impl ToTokens for EqEq","synthetic":false,"types":[]},{"text":"impl ToTokens for Ge","synthetic":false,"types":[]},{"text":"impl ToTokens for Gt","synthetic":false,"types":[]},{"text":"impl ToTokens for Le","synthetic":false,"types":[]},{"text":"impl ToTokens for Lt","synthetic":false,"types":[]},{"text":"impl ToTokens for MulEq","synthetic":false,"types":[]},{"text":"impl ToTokens for Ne","synthetic":false,"types":[]},{"text":"impl ToTokens for Or","synthetic":false,"types":[]},{"text":"impl ToTokens for OrEq","synthetic":false,"types":[]},{"text":"impl ToTokens for OrOr","synthetic":false,"types":[]},{"text":"impl ToTokens for Pound","synthetic":false,"types":[]},{"text":"impl ToTokens for Question","synthetic":false,"types":[]},{"text":"impl ToTokens for RArrow","synthetic":false,"types":[]},{"text":"impl ToTokens for LArrow","synthetic":false,"types":[]},{"text":"impl ToTokens for Rem","synthetic":false,"types":[]},{"text":"impl ToTokens for RemEq","synthetic":false,"types":[]},{"text":"impl ToTokens for FatArrow","synthetic":false,"types":[]},{"text":"impl ToTokens for Semi","synthetic":false,"types":[]},{"text":"impl ToTokens for Shl","synthetic":false,"types":[]},{"text":"impl ToTokens for ShlEq","synthetic":false,"types":[]},{"text":"impl ToTokens for Shr","synthetic":false,"types":[]},{"text":"impl ToTokens for ShrEq","synthetic":false,"types":[]},{"text":"impl ToTokens for Star","synthetic":false,"types":[]},{"text":"impl ToTokens for Sub","synthetic":false,"types":[]},{"text":"impl ToTokens for SubEq","synthetic":false,"types":[]},{"text":"impl ToTokens for Tilde","synthetic":false,"types":[]},{"text":"impl ToTokens for Meta","synthetic":false,"types":[]},{"text":"impl ToTokens for NestedMeta","synthetic":false,"types":[]},{"text":"impl ToTokens for Attribute","synthetic":false,"types":[]},{"text":"impl ToTokens for MetaList","synthetic":false,"types":[]},{"text":"impl ToTokens for MetaNameValue","synthetic":false,"types":[]},{"text":"impl ToTokens for Fields","synthetic":false,"types":[]},{"text":"impl ToTokens for Visibility","synthetic":false,"types":[]},{"text":"impl ToTokens for Variant","synthetic":false,"types":[]},{"text":"impl ToTokens for FieldsNamed","synthetic":false,"types":[]},{"text":"impl ToTokens for FieldsUnnamed","synthetic":false,"types":[]},{"text":"impl ToTokens for Field","synthetic":false,"types":[]},{"text":"impl ToTokens for VisPublic","synthetic":false,"types":[]},{"text":"impl ToTokens for VisCrate","synthetic":false,"types":[]},{"text":"impl ToTokens for VisRestricted","synthetic":false,"types":[]},{"text":"impl ToTokens for Expr","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprArray","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprAssign","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprAssignOp","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprAsync","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprAwait","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprBlock","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprBox","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprBreak","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprClosure","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprContinue","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprForLoop","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprGroup","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprIf","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprLet","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprLoop","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprMacro","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprMatch","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprMethodCall","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprRange","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprReference","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprRepeat","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprReturn","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprStruct","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprTry","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprTryBlock","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprTuple","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprType","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprUnsafe","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprWhile","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprYield","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprCall","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprBinary","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprUnary","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprLit","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprCast","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprField","synthetic":false,"types":[]},{"text":"impl ToTokens for Member","synthetic":false,"types":[]},{"text":"impl ToTokens for Index","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprIndex","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprPath","synthetic":false,"types":[]},{"text":"impl ToTokens for ExprParen","synthetic":false,"types":[]},{"text":"impl ToTokens for GenericParam","synthetic":false,"types":[]},{"text":"impl ToTokens for TypeParamBound","synthetic":false,"types":[]},{"text":"impl ToTokens for WherePredicate","synthetic":false,"types":[]},{"text":"impl ToTokens for Generics","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; ToTokens for ImplGenerics&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; ToTokens for TypeGenerics&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; ToTokens for Turbofish&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl ToTokens for BoundLifetimes","synthetic":false,"types":[]},{"text":"impl ToTokens for LifetimeDef","synthetic":false,"types":[]},{"text":"impl ToTokens for TypeParam","synthetic":false,"types":[]},{"text":"impl ToTokens for TraitBound","synthetic":false,"types":[]},{"text":"impl ToTokens for TraitBoundModifier","synthetic":false,"types":[]},{"text":"impl ToTokens for ConstParam","synthetic":false,"types":[]},{"text":"impl ToTokens for WhereClause","synthetic":false,"types":[]},{"text":"impl ToTokens for PredicateType","synthetic":false,"types":[]},{"text":"impl ToTokens for PredicateLifetime","synthetic":false,"types":[]},{"text":"impl ToTokens for PredicateEq","synthetic":false,"types":[]},{"text":"impl ToTokens for Lifetime","synthetic":false,"types":[]},{"text":"impl ToTokens for Lit","synthetic":false,"types":[]},{"text":"impl ToTokens for LitStr","synthetic":false,"types":[]},{"text":"impl ToTokens for LitByteStr","synthetic":false,"types":[]},{"text":"impl ToTokens for LitByte","synthetic":false,"types":[]},{"text":"impl ToTokens for LitChar","synthetic":false,"types":[]},{"text":"impl ToTokens for LitInt","synthetic":false,"types":[]},{"text":"impl ToTokens for LitFloat","synthetic":false,"types":[]},{"text":"impl ToTokens for LitBool","synthetic":false,"types":[]},{"text":"impl ToTokens for Macro","synthetic":false,"types":[]},{"text":"impl ToTokens for DeriveInput","synthetic":false,"types":[]},{"text":"impl ToTokens for BinOp","synthetic":false,"types":[]},{"text":"impl ToTokens for UnOp","synthetic":false,"types":[]},{"text":"impl ToTokens for Type","synthetic":false,"types":[]},{"text":"impl ToTokens for TypeSlice","synthetic":false,"types":[]},{"text":"impl ToTokens for TypeArray","synthetic":false,"types":[]},{"text":"impl ToTokens for TypePtr","synthetic":false,"types":[]},{"text":"impl ToTokens for TypeReference","synthetic":false,"types":[]},{"text":"impl ToTokens for TypeBareFn","synthetic":false,"types":[]},{"text":"impl ToTokens for TypeNever","synthetic":false,"types":[]},{"text":"impl ToTokens for TypeTuple","synthetic":false,"types":[]},{"text":"impl ToTokens for TypePath","synthetic":false,"types":[]},{"text":"impl ToTokens for TypeTraitObject","synthetic":false,"types":[]},{"text":"impl ToTokens for TypeImplTrait","synthetic":false,"types":[]},{"text":"impl ToTokens for TypeGroup","synthetic":false,"types":[]},{"text":"impl ToTokens for TypeParen","synthetic":false,"types":[]},{"text":"impl ToTokens for TypeInfer","synthetic":false,"types":[]},{"text":"impl ToTokens for TypeMacro","synthetic":false,"types":[]},{"text":"impl ToTokens for ReturnType","synthetic":false,"types":[]},{"text":"impl ToTokens for BareFnArg","synthetic":false,"types":[]},{"text":"impl ToTokens for Variadic","synthetic":false,"types":[]},{"text":"impl ToTokens for Abi","synthetic":false,"types":[]},{"text":"impl ToTokens for Path","synthetic":false,"types":[]},{"text":"impl ToTokens for PathSegment","synthetic":false,"types":[]},{"text":"impl ToTokens for PathArguments","synthetic":false,"types":[]},{"text":"impl ToTokens for GenericArgument","synthetic":false,"types":[]},{"text":"impl ToTokens for AngleBracketedGenericArguments","synthetic":false,"types":[]},{"text":"impl ToTokens for Binding","synthetic":false,"types":[]},{"text":"impl ToTokens for Constraint","synthetic":false,"types":[]},{"text":"impl ToTokens for ParenthesizedGenericArguments","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; ToTokens for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToTokens,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: ToTokens,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; ToTokens for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ToTokens,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: ToTokens,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["synstructure"] = [{"text":"impl ToTokens for BindStyle","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; ToTokens for BindingInfo&lt;'a&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()