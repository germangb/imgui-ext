(function() {var implementors = {};
implementors["backtrace"] = [{"text":"impl RefUnwindSafe for Frame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Symbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for SymbolName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; !RefUnwindSafe for BacktraceFmt&lt;'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'fmt, 'a, 'b&gt; !RefUnwindSafe for BacktraceFrameFmt&lt;'fmt, 'a, 'b&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Backtrace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BacktraceFrame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BacktraceSymbol","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BytesOrWideString&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintFmt","synthetic":true,"types":[]}];
implementors["failure"] = [{"text":"impl !RefUnwindSafe for Backtrace","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for Compat&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; !RefUnwindSafe for Context&lt;D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SyncFailure&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; !RefUnwindSafe for Causes&lt;'f&gt;","synthetic":true,"types":[]}];
implementors["imgui"] = [{"text":"impl !RefUnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SuspendedContext","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for DragFloat&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for DragFloat2&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for DragFloat3&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for DragFloat4&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for DragFloatRange2&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for DragInt&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for DragInt2&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for DragInt3&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for DragInt4&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for DragIntRange2&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontAtlasFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontAtlas","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontConfig","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FontAtlasTexture&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SharedFontAtlas","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Font","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontGlyph","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FontGlyphRanges","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for InputFloat&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for InputFloat2&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for InputFloat3&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for InputFloat4&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for InputInt&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for InputInt2&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for InputInt3&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for InputInt4&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for InputText&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for InputTextMultiline&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConfigFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BackendFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Io","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImGuiDragDropFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImDrawCornerFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImDrawListFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImGuiInputTextFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImGuiTreeNodeFlags","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for PlotHistogram&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for PlotLines&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for PopupModal&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawData","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DrawListIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawList","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for DrawCmdIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawCmdParams","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawVert","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextureId","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Textures&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FontStackToken","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ColorStackToken","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for StyleStackToken","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ItemWidthStackToken","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TextWrapPosStackToken","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ItemFlagsStackToken","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IdStackToken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImString","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImStr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Style","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for CollapsingHeader&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui, 'p&gt; !RefUnwindSafe for TreeNode&lt;'ui, 'p&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemHoveredFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorEditFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ColorEdit&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ColorPicker&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ColorButton&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComboBoxFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ComboBox&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ComboBoxToken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Image","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageButton","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MenuItem&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MainMenuBarToken","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MenuBarToken","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MenuToken","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ProgressBar&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SelectableFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Selectable&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Slider&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; RefUnwindSafe for VerticalSlider&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AngleSlider&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ChildWindow&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ChildWindowToken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowHoveredFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowFocusedFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowFlags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Window&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for WindowToken","synthetic":true,"types":[]},{"text":"impl&lt;'ui&gt; !RefUnwindSafe for ChannelsSplit&lt;'ui&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImColor","synthetic":true,"types":[]},{"text":"impl&lt;'ui&gt; !RefUnwindSafe for WindowDrawList&lt;'ui&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'ui&gt; !RefUnwindSafe for Ui&lt;'ui&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for FontSource&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for FontAtlasRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for FontAtlasRefMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Key","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FocusedWidget","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MouseButton","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MouseCursor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NavInput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawCmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemFlag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StyleColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StyleVar","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for EditableColor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorEditInputMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorEditDisplayMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorPickerMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ColorPreview","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComboBoxHeight","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComboBoxPreviewMode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Id&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Condition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Direction","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for ImVector&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataType","synthetic":true,"types":[]}];
implementors["imgui_sys"] = [{"text":"impl RefUnwindSafe for ImVec2_Simple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVec4_Simple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImColor_Simple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImGuiContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImDrawListSharedData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVector_float","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVector_ImWchar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVector_ImDrawVert","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVector_ImFontGlyph","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVector_ImGuiTextRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVector_ImGuiStoragePair","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVector_ImDrawChannel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVector_char","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVector_ImU32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVector_ImFontAtlasCustomRect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVector_ImTextureID","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVector_ImFontConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVector_ImFontPtr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVector_ImDrawCmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVector_ImVec4","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVector_ImDrawIdx","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVector_ImVec2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVec2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImVec4","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImGuiStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImGuiIO","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImGuiInputTextCallbackData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImGuiSizeCallbackData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImGuiPayload","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImGuiOnceUponAFrame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImGuiTextFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImGuiTextBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImGuiStorage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImGuiListClipper","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImColor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImDrawCmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImDrawVert","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImDrawChannel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImDrawListSplitter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImDrawList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImDrawData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImFontConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImFontGlyph","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImFontGlyphRangesBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImFontAtlasCustomRect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImFontAtlas","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImFont","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImGuiTextRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImGuiStoragePair","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImGuiStoragePair__bindgen_ty_1","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl RefUnwindSafe for Condvar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Once","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawMutex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawRwLock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawThreadId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OnceState","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl RefUnwindSafe for ParkToken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnparkResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnparkToken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpinWait","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilterOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParkResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RequeueOp","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl RefUnwindSafe for TokenStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LexError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Punct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ident","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Literal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TokenTree","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Delimiter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Spacing","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntoIter","synthetic":true,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;'a, T&gt; RefUnwindSafe for Drain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; RefUnwindSafe for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl RefUnwindSafe for Attribute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetaList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetaNameValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Field","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldsNamed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Variant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VisCrate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VisPublic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VisRestricted","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprAssign","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprAsync","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprAwait","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprBinary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprBreak","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprCall","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprCast","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprClosure","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprContinue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprField","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprForLoop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprIf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprLet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprLit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprLoop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprMacro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprMatch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprParen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprPath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprReference","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprRepeat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprReturn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprTry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprTuple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprUnary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprWhile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprYield","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Index","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConstParam","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Generics","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LifetimeDef","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PredicateEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PredicateType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraitBound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeParam","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Lifetime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitBool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitByte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitByteStr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitChar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitFloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitInt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitStr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Macro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataEnum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataUnion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeriveInput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abi","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BareFnArg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeBareFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeInfer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeMacro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeNever","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeParen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypePath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypePtr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeReference","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeSlice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeTuple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Variadic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Binding","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Constraint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Path","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PathSegment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QSelf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttrStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Meta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NestedMeta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fields","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Visibility","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Expr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Member","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GenericParam","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeParamBound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WherePredicate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Lit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StrStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Data","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BinOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReturnType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GenericArgument","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PathArguments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Underscore","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abstract","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for As","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Async","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Auto","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Await","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Become","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Box","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Break","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Const","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Continue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Crate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Default","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Do","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dyn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Else","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Enum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Extern","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Final","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for For","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for If","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Impl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for In","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Let","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Loop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Macro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Match","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Move","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mut","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Override","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Priv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pub","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ref","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Return","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SelfType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SelfValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Static","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Struct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Super","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Trait","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Try","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Typeof","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Union","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Unsafe","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Unsized","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Use","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Virtual","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Where","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for While","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Yield","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Add","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for And","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndAnd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for At","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bang","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Caret","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CaretEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Colon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Colon2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Comma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Div","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DivEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dollar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dot2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dot3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DotDotEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Eq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EqEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ge","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Gt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Le","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Lt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MulEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ne","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Or","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OrEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OrOr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Question","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RArrow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LArrow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RemEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FatArrow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Semi","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Shl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShlEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Shr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShrEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Star","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sub","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tilde","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Brace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bracket","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Paren","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; RefUnwindSafe for Pairs&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; RefUnwindSafe for PairsMut&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; RefUnwindSafe for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Nothing","synthetic":true,"types":[]}];
implementors["synstructure"] = [{"text":"impl&lt;'a&gt; RefUnwindSafe for BindingInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VariantAst&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for VariantInfo&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Structure&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddBounds","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BindStyle","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()