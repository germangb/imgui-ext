initSidebarItems({"enum":[["ColorEditDisplayMode","Color editor display mode."],["ColorEditInputMode","Color editor input mode."],["ColorFormat","Color component formatting"],["ColorPickerMode","Color picker hue/saturation/value editor mode"],["ColorPreview","Color editor preview style"],["ComboBoxHeight","Combo box height mode."],["ComboBoxPreviewMode","Combo box preview mode."],["Condition","Condition for applying a setting"],["Direction","A cardinal direction"],["DrawCmd","A draw command"],["EditableColor","Mutable reference to an editable color value."],["FocusedWidget","Target widget selection for keyboard focus"],["FontAtlasRef","An immutably borrowed reference to a (possibly shared) font atlas"],["FontAtlasRefMut","A mutably borrowed reference to a (possibly shared) font atlas"],["FontSource","A source for binary font data"],["Id","Unique ID used by widgets"],["ItemFlag","A temporary change in item flags"],["Key","A key identifier"],["MouseButton","Represents one of the supported mouse buttons"],["MouseCursor","Mouse cursor type identifier"],["NavInput","An input identifier for navigation"],["StyleColor","A color identifier for styling"],["StyleVar","A temporary change in user interface style"]],"fn":[["dear_imgui_version","Returns the underlying Dear ImGui library version"]],"macro":[["im_str",""]],"mod":[["internal","Internal raw utilities (don't use unless you know what you're doing!)"]],"struct":[["AngleSlider","Builder for an angle slider widget."],["BackendFlags","Backend capabilities"],["ChannelsSplit","Represent the drawing interface within a call to `channels_split`."],["ChildWindow","Builder for a child window"],["ChildWindowToken","Tracks a child window that must be ended by calling `.end()`"],["CollapsingHeader",""],["ColorButton","Builder for a color button widget."],["ColorEdit","Builder for a color editor widget."],["ColorEditFlags","Color edit flags"],["ColorPicker","Builder for a color picker widget."],["ColorStackToken","Tracks one or more changes pushed to the color stack that must be popped by calling `.pop()`"],["ComboBox","Builder for a combo box widget"],["ComboBoxFlags","Flags for combo boxes"],["ComboBoxToken","Tracks a combo box that must be ended by calling `.end()`"],["ConfigFlags","Configuration flags"],["Context","An imgui-rs context."],["DragFloat",""],["DragFloat2",""],["DragFloat3",""],["DragFloat4",""],["DragFloatRange2",""],["DragInt",""],["DragInt2",""],["DragInt3",""],["DragInt4",""],["DragIntRange2",""],["DrawCmdIterator",""],["DrawCmdParams",""],["DrawData","All draw data required to render a frame."],["DrawList","Draw command list"],["DrawListIterator","Iterator over draw lists"],["DrawVert","A single vertex"],["Font","Runtime data for a single font within a font atlas"],["FontAtlas","A font atlas that builds a single texture"],["FontAtlasFlags","Font atlas configuration flags"],["FontAtlasTexture","Handle to a font atlas texture"],["FontConfig","Configuration settings for a font"],["FontGlyph","A single font glyph"],["FontGlyphRanges","A set of 16-bit Unicode codepoints"],["FontId","A font identifier"],["FontStackToken","Tracks a font pushed to the font stack that must be popped by calling `.pop()`"],["IdStackToken","Tracks an ID pushed to the ID stack that must be popped by calling `.pop()`"],["ImColor","Wrap `ImU32` (a type typically used by ImGui to store packed colors) This type is used to represent the color of drawing primitives in ImGui's custom drawing API."],["ImDrawCornerFlags","Flags for indictating which corner of a rectangle should be rounded"],["ImDrawListFlags","Draw list flags"],["ImGuiDragDropFlags","Flags for igBeginDragDropSource(), igAcceptDragDropPayload()"],["ImGuiInputTextFlags","Flags for text inputs"],["ImGuiTreeNodeFlags","Flags for trees and collapsing headers"],["ImStr","A UTF-8 encoded, implicitly null-terminated string slice."],["ImString","A UTF-8 encoded, growable, implicitly null-terminated string."],["Image","Builder for an image widget"],["ImageButton","Builder for an image button widget"],["InputFloat",""],["InputFloat2",""],["InputFloat3",""],["InputFloat4",""],["InputInt",""],["InputInt2",""],["InputInt3",""],["InputInt4",""],["InputText",""],["InputTextMultiline",""],["Io","Settings and inputs/outputs for imgui-rs"],["ItemFlagsStackToken","Tracks a change pushed to the item flags stack"],["ItemHoveredFlags","Item hover check option flags"],["ItemWidthStackToken","Tracks a change pushed to the item width stack"],["MainMenuBarToken","Tracks a main menu bar that must be ended by calling `.end()`"],["MenuBarToken","Tracks a menu bar that must be ended by calling `.end()`"],["MenuItem","Builder for a menu item."],["MenuToken","Tracks a menu that must be ended by calling `.end()`"],["PlotHistogram",""],["PlotLines",""],["PopupModal","Created by call to [`Ui::popup_modal`]."],["ProgressBar","Builder for a progress bar widget."],["Selectable","Builder for a selectable widget."],["SelectableFlags","Flags for selectables"],["SharedFontAtlas","A font atlas that can be shared between contexts"],["Slider","Builder for a slider widget."],["Style","User interface style/colors"],["StyleStackToken","Tracks one or more changes pushed to the style stack that must be popped by calling `.pop()`"],["SuspendedContext","A suspended imgui-rs context."],["TextWrapPosStackToken","Tracks a change pushed to the text wrap position stack"],["TextureId","An opaque texture identifier"],["Textures","Generic texture mapping for use by renderers."],["TreeNode",""],["Ui","A temporary reference for building the user interface for one frame"],["VerticalSlider","Builder for a vertical slider widget."],["Window","Builder for a window"],["WindowDrawList","Object implementing the custom draw API."],["WindowFlags","Configuration flags for windows"],["WindowFocusedFlags","Window focus check option flags"],["WindowHoveredFlags","Window hover check option flags"],["WindowToken","Tracks a window that must be ended by calling `.end()`"]],"trait":[["ClipboardBackend","Trait for clipboard backends"]],"type":[["DrawIdx","A vertex index"],["ImGuiColorEditFlags",""],["ImGuiComboFlags",""],["ImGuiSelectableFlags",""],["ImGuiWindowFlags",""]]});